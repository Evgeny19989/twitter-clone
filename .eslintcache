[{"/home/evgeny/twitter/twitter-clone/src/index.tsx":"1","/home/evgeny/twitter/twitter-clone/src/theme.ts":"2","/home/evgeny/twitter/twitter-clone/src/store/store.ts":"3","/home/evgeny/twitter/twitter-clone/src/App.tsx":"4","/home/evgeny/twitter/twitter-clone/src/store/sagas.ts":"5","/home/evgeny/twitter/twitter-clone/src/store/RootReducer.ts":"6","/home/evgeny/twitter/twitter-clone/src/store/ducks/user/actionCreators.ts":"7","/home/evgeny/twitter/twitter-clone/src/store/ducks/user/selectors.ts":"8","/home/evgeny/twitter/twitter-clone/src/pages/SignIn.tsx":"9","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweets/contracts/state.ts":"10","/home/evgeny/twitter/twitter-clone/src/store/ducks/user/saga.ts":"11","/home/evgeny/twitter/twitter-clone/src/store/ducks/user/reducer.ts":"12","/home/evgeny/twitter/twitter-clone/src/store/ducks/tags/reducer.ts":"13","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweets/saga.ts":"14","/home/evgeny/twitter/twitter-clone/src/store/ducks/tags/saga.ts":"15","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweet/reducer.ts":"16","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweet/saga.ts":"17","/home/evgeny/twitter/twitter-clone/src/store/ducks/users/saga.ts":"18","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweets/reducer.ts":"19","/home/evgeny/twitter/twitter-clone/src/store/ducks/users/reducer.ts":"20","/home/evgeny/twitter/twitter-clone/src/store/ducks/user/contracts/ActionTypes.ts":"21","/home/evgeny/twitter/twitter-clone/src/pages/Home/index.tsx":"22","/home/evgeny/twitter/twitter-clone/src/pages/Signin/components/LoginModal.tsx":"23","/home/evgeny/twitter/twitter-clone/src/pages/Signin/components/RegisterModal.tsx":"24","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweets/contracts/ActionTypes.ts":"25","/home/evgeny/twitter/twitter-clone/src/store/ducks/users/actionCreators.ts":"26","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweet/actionCreators.ts":"27","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweet/contracts/ActionTypes.ts":"28","/home/evgeny/twitter/twitter-clone/src/services/api/tagsApi.ts":"29","/home/evgeny/twitter/twitter-clone/src/store/ducks/tags/actionCreators.ts":"30","/home/evgeny/twitter/twitter-clone/src/services/api/authApi.ts":"31","/home/evgeny/twitter/twitter-clone/src/services/api/tweetsApi.ts":"32","/home/evgeny/twitter/twitter-clone/src/store/ducks/tags/contracts/state.ts":"33","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweets/actionCreators.ts":"34","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweets/selectors.ts":"35","/home/evgeny/twitter/twitter-clone/src/pages/Home/theme.tsx":"36","/home/evgeny/twitter/twitter-clone/src/components/SearchTextField.tsx":"37","/home/evgeny/twitter/twitter-clone/src/components/BackButton.tsx":"38","/home/evgeny/twitter/twitter-clone/src/components/AddTweetForm.tsx":"39","/home/evgeny/twitter/twitter-clone/src/components/Users.tsx":"40","/home/evgeny/twitter/twitter-clone/src/pages/Home/components/FullTweet.tsx":"41","/home/evgeny/twitter/twitter-clone/src/components/SideMenu.tsx":"42","/home/evgeny/twitter/twitter-clone/src/core/axios.ts":"43","/home/evgeny/twitter/twitter-clone/src/store/ducks/users/selectors.ts":"44","/home/evgeny/twitter/twitter-clone/src/components/Tweet/index.tsx":"45","/home/evgeny/twitter/twitter-clone/src/components/Tags.tsx":"46","/home/evgeny/twitter/twitter-clone/src/components/ModalBlock/index.tsx":"47","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweet/selectors.ts":"48","/home/evgeny/twitter/twitter-clone/src/store/ducks/tags/selectors.ts":"49","/home/evgeny/twitter/twitter-clone/src/utils/formatDate.ts":"50","/home/evgeny/twitter/twitter-clone/src/utils/uploadImages.ts":"51","/home/evgeny/twitter/twitter-clone/src/components/UploadImages.tsx":"52"},{"size":712,"mtime":1613463524518,"results":"53","hashOfConfig":"54"},{"size":2551,"mtime":1613463524522,"results":"55","hashOfConfig":"54"},{"size":1015,"mtime":1614925676965,"results":"56","hashOfConfig":"54"},{"size":1575,"mtime":1615258379980,"results":"57","hashOfConfig":"54"},{"size":444,"mtime":1614671179729,"results":"58","hashOfConfig":"54"},{"size":460,"mtime":1614669688775,"results":"59","hashOfConfig":"54"},{"size":1320,"mtime":1614738931570,"results":"60","hashOfConfig":"54"},{"size":771,"mtime":1614682371502,"results":"61","hashOfConfig":"54"},{"size":5032,"mtime":1614824707893,"results":"62","hashOfConfig":"54"},{"size":582,"mtime":1614908707648,"results":"63","hashOfConfig":"54"},{"size":1900,"mtime":1614928770019,"results":"64","hashOfConfig":"54"},{"size":792,"mtime":1614657453466,"results":"65","hashOfConfig":"54"},{"size":923,"mtime":1613463524522,"results":"66","hashOfConfig":"54"},{"size":1568,"mtime":1614908707648,"results":"67","hashOfConfig":"54"},{"size":575,"mtime":1613463524522,"results":"68","hashOfConfig":"54"},{"size":1105,"mtime":1614650828303,"results":"69","hashOfConfig":"54"},{"size":830,"mtime":1614650828303,"results":"70","hashOfConfig":"54"},{"size":465,"mtime":1614669688775,"results":"71","hashOfConfig":"54"},{"size":1666,"mtime":1614908707648,"results":"72","hashOfConfig":"54"},{"size":776,"mtime":1614669555593,"results":"73","hashOfConfig":"54"},{"size":1254,"mtime":1614738896982,"results":"74","hashOfConfig":"54"},{"size":4979,"mtime":1615258245950,"results":"75","hashOfConfig":"54"},{"size":4717,"mtime":1614910352483,"results":"76","hashOfConfig":"54"},{"size":8149,"mtime":1614742455909,"results":"77","hashOfConfig":"54"},{"size":1498,"mtime":1614828048368,"results":"78","hashOfConfig":"54"},{"size":690,"mtime":1614669471980,"results":"79","hashOfConfig":"54"},{"size":1117,"mtime":1614650828303,"results":"80","hashOfConfig":"54"},{"size":744,"mtime":1614650828303,"results":"81","hashOfConfig":"54"},{"size":238,"mtime":1613465330624,"results":"82","hashOfConfig":"54"},{"size":1201,"mtime":1613463524522,"results":"83","hashOfConfig":"54"},{"size":1019,"mtime":1614916003425,"results":"84","hashOfConfig":"54"},{"size":800,"mtime":1614908707648,"results":"85","hashOfConfig":"54"},{"size":277,"mtime":1613463524522,"results":"86","hashOfConfig":"54"},{"size":1556,"mtime":1614908707648,"results":"87","hashOfConfig":"54"},{"size":805,"mtime":1614584793730,"results":"88","hashOfConfig":"54"},{"size":6814,"mtime":1614908707648,"results":"89","hashOfConfig":"54"},{"size":986,"mtime":1613463524518,"results":"90","hashOfConfig":"54"},{"size":428,"mtime":1613528063055,"results":"91","hashOfConfig":"54"},{"size":4981,"mtime":1614829036710,"results":"92","hashOfConfig":"54"},{"size":2149,"mtime":1614671877214,"results":"93","hashOfConfig":"54"},{"size":4550,"mtime":1614908707648,"results":"94","hashOfConfig":"54"},{"size":5509,"mtime":1614753474901,"results":"95","hashOfConfig":"54"},{"size":175,"mtime":1614588089689,"results":"96","hashOfConfig":"54"},{"size":259,"mtime":1614669594849,"results":"97","hashOfConfig":"54"},{"size":5077,"mtime":1614908707648,"results":"98","hashOfConfig":"54"},{"size":2043,"mtime":1613469160162,"results":"99","hashOfConfig":"54"},{"size":1476,"mtime":1613463524518,"results":"100","hashOfConfig":"54"},{"size":679,"mtime":1613628978507,"results":"101","hashOfConfig":"54"},{"size":654,"mtime":1613463524522,"results":"102","hashOfConfig":"54"},{"size":238,"mtime":1614589449423,"results":"103","hashOfConfig":"54"},{"size":471,"mtime":1614767689103,"results":"104","hashOfConfig":"54"},{"size":2626,"mtime":1614826813470,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"houjc2",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"108"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"108"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"108"},"/home/evgeny/twitter/twitter-clone/src/index.tsx",[],["226","227"],"/home/evgeny/twitter/twitter-clone/src/theme.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/store.ts",[],"/home/evgeny/twitter/twitter-clone/src/App.tsx",["228"],"import React from 'react';\nimport {SignIn} from \"./pages/SignIn\";\nimport {Route, Switch, useHistory} from 'react-router-dom'\nimport {Home} from \"./pages/Home\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectISAuth, selectUserStatus} from \"./store/ducks/user/selectors\";\nimport {LoadingStatus} from './store/ducks/tweets/contracts/state';\nimport {fetchUserData} from './store/ducks/user/actionCreators';\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\n\n\nfunction App() {\n\n\n    const history = useHistory();\n    const Auth = useSelector(selectISAuth)\n    const loadingStatus = useSelector(selectUserStatus)\n    const isReady = loadingStatus !== LoadingStatus.NEVER && loadingStatus !== LoadingStatus.LOADING\n    const dispatch = useDispatch()\n    React.useEffect(() => {\n        dispatch(fetchUserData())\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        if (!Auth && isReady) {\n            history.push('/signin');\n        } else if (history.location.pathname === '/') {\n            history.push('/home');\n        }\n\n\n\n    }, [Auth, isReady])\n    if (!isReady) {\n        return (\n            <div style={{position:\"absolute\" , left:'50%' ,top:'40%'}}>\n                <TwitterIcon color=\"primary\" style={{ width: 80, height: 80 }} />\n            </div>\n\n        );\n    }\n\n\n    return (\n\n\n        <div className=\"App\">\n                <Switch>\n                    <Route exact path='/signin' component={SignIn}/>\n                    <Route path='/home' component={Home}/>\n                </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","/home/evgeny/twitter/twitter-clone/src/store/sagas.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/RootReducer.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/user/actionCreators.ts",["229"],"import {userState, User} from \"./contracts/state\";\n\n\nimport {FetchSignInActionInterface, SetLoadingStateActionInterface, SetUserDataActionInterface,FetchSignUpActionInterface, UserActionType, FetchUserDataActionInterface} from \"./contracts/ActionTypes\";\nimport {LoginFormProps} from \"../../../pages/Signin/components/LoginModal\";\nimport {RegisterFormProps} from \"../../../pages/Signin/components/RegisterModal\";\n\n\n\n\n\n\nexport const setUserData = (payload:userState['data']):SetUserDataActionInterface =>({\n    type: UserActionType.SET_USER_DATA,\n    payload\n})\n\nexport const setUserLoadingStatus = (payload:userState['status']):SetLoadingStateActionInterface =>({\n    type: UserActionType.SET_LOADING_STATE,\n    payload\n})\n\nexport const fetchUserSighin = (payload:LoginFormProps):FetchSignInActionInterface =>({\n    type: UserActionType.FETCH_SIGN_IN,\n    payload\n})\n\n\nexport const fetchUserData = ():FetchUserDataActionInterface =>({\n    type: UserActionType.FETCH_USER_DATA,\n\n})\n\n\nexport const fetchUserSighUp = (payload:RegisterFormProps):FetchSignUpActionInterface =>({\n    type: UserActionType.FETCH_SIGN_UP,\n    payload\n})\n\n\n\n\nexport type UserActions = SetUserDataActionInterface  | SetLoadingStateActionInterface |\n    FetchSignInActionInterface|\n    FetchSignUpActionInterface |\n    FetchUserDataActionInterface\n\n","/home/evgeny/twitter/twitter-clone/src/store/ducks/user/selectors.ts",[],"/home/evgeny/twitter/twitter-clone/src/pages/SignIn.tsx",["230","231","232","233"],"import React, {ReactElement} from \"react\";\nimport {makeStyles, Typography} from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport Button from \"@material-ui/core/Button\";\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport {ModalBlock} from '../components/ModalBlock';\nimport {LoginModal} from \"./Signin/components/LoginModal\";\nimport {RegisterModal} from \"./Signin/components/RegisterModal\";\n\nexport const useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: 'flex',\n        height: '100vh'\n    },\n    blueSide: {\n        background: '#71C9F8',\n        flex: '0 0 50%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        overflow: 'hidden',\n        position: 'relative'\n    },\n    blueSideListInfo: {\n        listStyle: 'none',\n        position: 'relative',\n        padding: '0',\n        margin: '0',\n        '& h6': {\n            color: 'white',\n            display: 'flex',\n            alignItems: 'center',\n        },\n        fontWeight: 600,\n    },\n\n    blueSidesListIcons: {\n        fontSize: '30px',\n        marginRight: '15px'\n    },\n    loginSide: {\n        flex: '0 0 50%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n\n    },\n    loginSideTwitterIcon: {\n        fontSize: '45px'\n    }\n    ,\n    loginSideWrapper: {\n        maxWidth: '380px'\n    },\n    loginSideTitle: {\n        fontWeight: 700,\n        fontSize: '32px',\n        marginBottom: '45px',\n        marginTop: '20px',\n    },\n    blueSideBigIcon: {\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        width: '250%',\n        height: '250%',\n        transform: 'translate(-50%,-50%)',\n    },\n    registerField: {\n        marginBottom: theme.spacing(5),\n    },\n    loginFormControl: {\n        marginBottom: theme.spacing(2),\n    },\n    loginSideField: {\n        marginBottom: 18,\n    },\n\n    imageIconRemove:{\n        position:'relative',\n        top:'-60px',\n        right:'-40px',\n        padding:\"3px!important\",\n        background:\"#ff4d4d!important\",\n    }\n\n\n}))\n\nexport const SignIn: React.FC = (): ReactElement => {\n\n\n    const classes = useStyles()\n    const [visibleModal, setVisibleModal] = React.useState<'signIn' | 'signUp'>();\n\n    const handleClickOpenSignIn = (): void => {\n        setVisibleModal('signIn');\n    };\n\n    const handleClickOpenSignUp = (): void => {\n        setVisibleModal('signUp');\n    };\n\n    const handleCloseModal = (): void => {\n        setVisibleModal(undefined);\n    };\n\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.blueSide}>\n                <TwitterIcon className={classes.blueSideBigIcon} color='primary'/>\n                <ul className={classes.blueSideListInfo}>\n                    <li><Typography variant='h6'>\n                        <SearchIcon className={classes.blueSidesListIcons}/>\n                        Читайте о том, что вам интересно</Typography></li>\n                    <li><Typography variant='h6'>\n                        <PeopleOutlineIcon className={classes.blueSidesListIcons}/>\n                        Узнайте ,о чем говорят в мире</Typography></li>\n                    <li><Typography variant='h6'>\n                        <ChatBubbleOutlineIcon className={classes.blueSidesListIcons}/>\n                        Присоединяйтесь к общению</Typography></li>\n                </ul>\n            </div>\n\n            <div className={classes.loginSide}>\n                <div className={classes.loginSideWrapper}>\n                    <TwitterIcon className={classes.loginSideTwitterIcon} color='primary'/>\n                    <Typography className={classes.loginSideTitle} variant='h4'>Узнайте, что происходит в мире прямо\n                        сейчас</Typography>\n                    <Typography>\n\n                        <b>\n                            Присоединяйтесь к Твиттеру прямо сейчас</b></Typography>\n                    <br/>\n                    <Button onClick={handleClickOpenSignUp} style={{marginBottom: '20px'}} variant='contained'\n                            color='primary' fullWidth>Зарегистрироваться </Button>\n                    <Button onClick={handleClickOpenSignIn} variant='outlined' color='primary' fullWidth>Войти </Button>\n                </div>\n            </div>\n\n            <LoginModal open={visibleModal === 'signIn'} onClose={handleCloseModal}/>\n            <RegisterModal open={visibleModal === 'signUp'} onClose={handleCloseModal}/>\n        </div>\n\n    );\n}\n\n\nexport default SignIn;","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweets/contracts/state.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/user/saga.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/user/reducer.ts",["234"],"import produce, {Draft} from 'immer'\nimport {User, userState} from \"./contracts/state\";\nimport {UserActions} from \"./actionCreators\";\n\nimport {UserActionType} from './contracts/ActionTypes';\n\nimport {LoadingStatus} from \"../tweets/contracts/state\";\n\nconst initialTweetsState: userState = {\n    data: undefined,\n    status: LoadingStatus.NEVER,\n\n}\n\nexport const UserReducer = produce((draft: Draft<userState>, action: UserActions) => {\n\n\n    switch (action.type) {\n        case UserActionType.SET_USER_DATA :\n            draft.data = action.payload\n            draft.status = LoadingStatus.SUCCESS\n            break;\n\n        case UserActionType.SET_LOADING_STATE :\n            draft.status = action.payload\n            break;\n\n        default:\n            break\n    }\n\n\n}, initialTweetsState)","/home/evgeny/twitter/twitter-clone/src/store/ducks/tags/reducer.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/tweets/saga.ts",["235","236"],"import {call, put, takeEvery} from 'redux-saga/effects'\nimport {AddTweet, RemoveTweet, SetAddFormState, setTweetLoading, SetTweets} from \"./actionCreators\";\nimport {TweetsApi} from \"../../../services/api/tweetsApi\";\nimport {AddFormState, LoadingStatus, Tweet} from \"./contracts/state\";\nimport {FetchAddTweetActionInterface, RemoveTweetActionInterface, TweetsActionType} from './contracts/ActionTypes';\n\n\n\n// ...\n\n// Our worker Saga: will perform the async increment task\nexport function* fetchTweetsRequest() {\n\n    try {\n\n        const data = yield call(TweetsApi.fetchTweets)\n        yield put(SetTweets(data))\n    } catch (error) {\n        yield put(setTweetLoading(LoadingStatus.ERROR))\n    }\n\n\n}\n\n\nexport function* fetchAddTweetRequest({payload}: FetchAddTweetActionInterface) {\n\n\n    try {\n\n        const item = yield call(TweetsApi.addTweetData, payload)\n        yield put(AddTweet(item))\n    } catch\n        (error) {\n        yield put(SetAddFormState(AddFormState.ERROR))\n    }\n\n\n}\n\nexport function* removeTweetRequest({payload}: RemoveTweetActionInterface) {\n\n\n    try {\n\n         yield call(TweetsApi.removeTweet, payload)\n\n    } catch\n        (error) {\n       alert('Ошибка при удаление твита')\n    }\n\n\n}\n\n// Our watcher Saga: spawn a new incrementAsync task on each INCREMENT_ASYNC\nexport function* tweetsSaga() {\n    yield takeEvery(TweetsActionType.FETCH_TWEETS, fetchTweetsRequest)\n    yield takeEvery(TweetsActionType.FETCH_ADD_TWEET, fetchAddTweetRequest)\n    yield takeEvery(TweetsActionType.REMOVE_TWEET, removeTweetRequest)\n}","/home/evgeny/twitter/twitter-clone/src/store/ducks/tags/saga.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/tweet/reducer.ts",["237"],"import produce, {Draft} from 'immer'\nimport {AddFormState, LoadingStatus} from '../tweets/contracts/state';\nimport { TweetActions } from './actionCreators';\nimport { TweetActionsType } from './contracts/ActionTypes';\n\nimport {TweetState} from './contracts/state';\n\n\nconst initialTweetState: TweetState = {\n    data: undefined,\n    LoadingStatus: LoadingStatus.NEVER,\n\n\n}\n\nexport const TweetReducer = produce((draft: Draft<TweetState>, action: TweetActions) => {\n\n\n    switch (action.type) {\n        case TweetActionsType.SET_DATA :\n            draft.data = action.payload\n            draft.LoadingStatus = LoadingStatus.LOADED\n            break;\n\n        case TweetActionsType.FETCH_ADD_DATA:\n            draft.data = undefined\n            draft.LoadingStatus = LoadingStatus.LOADING\n            break\n\n\n  /*      case TweetActionsType.FETCH_ADD_DATA:\n          draft.addFormState = AddFormState.LOADING\n            break\n*/\n        case TweetActionsType.SET_LOADING_STATE:\n            draft.LoadingStatus = action.payload\n            break\n        default:\n            break\n    }\n\n\n}, initialTweetState)","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweet/saga.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/users/saga.ts",["238","239","240","241"],"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { TagsApi } from '../../../services/api/tagsApi';\n\n\nexport function* fetchUsersRequest() {\n    // try {\n    //   const items = yield call(TagsApi.fetchTags);\n    //   yield put(setTags(items));\n    // } catch (error) {\n    //   yield put(setTagsLoadingStatus(LoadingStatus.ERROR));\n    // }\n}\n\nexport function* usersSaga() {\n    // yield takeLatest(TagsActionsType.FETCH_TAGS, fetchTagsRequest);\n}\n","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweets/reducer.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/users/reducer.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/user/contracts/ActionTypes.ts",[],"/home/evgeny/twitter/twitter-clone/src/pages/Home/index.tsx",["242","243","244","245","246","247","248","249"],"import {\n    Grid,\n    InputAdornment,\n    Paper,\n    Typography,\n} from '@material-ui/core'\nimport React from 'react'\n\nimport ListItem from '@material-ui/core/ListItem/ListItem';\nimport Divider from '@material-ui/core/Divider/Divider';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText/ListItemText';\nimport List from '@material-ui/core/List/List';\nimport Button from '@material-ui/core/Button/Button';\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport PersonAddIcon from '@material-ui/icons/PersonAddOutlined';\nimport Container from '@material-ui/core/Container';\nimport classNames from 'classnames'\nimport {Tweet} from \"../../components/Tweet\";\nimport {SideMenu} from \"../../components/SideMenu\";\nimport {AddTweetForm} from '../../components/AddTweetForm';\nimport {useHomeStyles} from './theme';\nimport {SearchTextField} from '../../components/SearchTextField';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {FetchTweets} from '../../store/ducks/tweets/actionCreators';\nimport {selectTweetsItems, selectIsTweetsLoading} from \"../../store/ducks/tweets/selectors\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {fetchTags} from \"../../store/ducks/tags/actionCreators\";\nimport {Route} from 'react-router-dom';\nimport {BackButton} from \"../../components/BackButton\";\nimport {FullTweet} from './components/FullTweet';\nimport { Users } from '../../components/Users';\n\n\nexport const Home = (): React.ReactElement => {\n    const classes = useHomeStyles()\n    const dispatch = useDispatch()\n    const tweets = useSelector(selectTweetsItems)\n    const isLoading = useSelector(selectIsTweetsLoading)\n    React.useEffect(() => {\n        dispatch(FetchTweets())\n        dispatch(fetchTags())\n    }, [dispatch])\n\n    return <Container className={classes.wrapper} maxWidth={'lg'}>\n        <Grid container spacing={3}>\n            <Grid item xs={2}>\n                <SideMenu classes={classes}/>\n            </Grid>\n            <Grid item xs={6}>\n                <Paper className={classes.tweetsWrapper} variant={'outlined'}>\n                    <Paper style={{\n                        zIndex: 444, display: 'flex',\n                        alignItems: 'center',\n                    }} className={classNames(classes.tweetsHeader)} variant={'outlined'}>\n                        <Route path=\"/home/:any\">\n                            <BackButton/>\n                        </Route>\n                        <Route path=\"/home/tweet\">\n                            <Typography variant=\"h6\">Твитнуть</Typography>\n                        </Route>\n                        <Route path={['/home', '/home/search']} exact>\n                            <Typography variant=\"h6\">Твиты</Typography>\n                        </Route>\n\n\n                    </Paper>\n                    <Route path={['/home', '/home/search']} exact>\n                        <Paper>\n                            <div className={classes.addForm}>\n                                <div className={classes.addForm}>\n                                    <AddTweetForm classes={classes}/>\n                                </div>\n\n                            </div>\n                            <div className={classes.addFormBottomLine}/>\n                        </Paper>\n                    </Route>\n                    <Route exact path={'/home'}>\n                        {isLoading ?\n                            (<CircularProgress className={classes.tweetsCentred}/>)\n                            :\n                            (\n                                tweets.map((el, index) => {\n                                    return <Tweet\n\n                                        {...el}\n                                        key={el._id}\n\n                                        classes={classes}/>\n                                })\n                            )\n                        }\n                    </Route>\n                    <Route exact path={'/home/tweet/:id'} component={FullTweet}/>\n\n                </Paper>\n            </Grid>\n            <Grid item xs={3}>\n\n                <SearchTextField style={{position: 'sticky', top: '0'}}\n                                 variant=\"outlined\"\n                                 placeholder=\"Поиск по Твиттеру\"\n                                 InputProps={{\n                                     startAdornment: (\n                                         <InputAdornment position=\"start\">\n                                             <SearchIcon/>\n                                         </InputAdornment>\n                                     ),\n                                 }}\n                                 fullWidth\n                />\n\n                {/*<FullTweet/>*/}\n                <Users/>\n\n\n            </Grid>\n        </Grid>\n    </Container>\n}","/home/evgeny/twitter/twitter-clone/src/pages/Signin/components/LoginModal.tsx",[],"/home/evgeny/twitter/twitter-clone/src/pages/Signin/components/RegisterModal.tsx",["250","251"],"import  React from 'react'\nimport {ModalBlock} from \"../../../components/ModalBlock\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport {useStyles} from \"../../SignIn\";\nimport * as yup from \"yup\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { fetchUserSighUp} from \"../../../store/ducks/user/actionCreators\";\nimport {Color} from \"@material-ui/lab/Alert\";\nimport {Notification} from \"../../../components/Notification\";\nimport {LoadingStatus} from \"../../../store/ducks/tweets/contracts/state\";\nimport {selectUserStatus} from \"../../../store/ducks/user/selectors\";\n\ninterface RegisterModalProps {\n    open: boolean,\n    onClose: () => void,\n}\n\n\nexport interface RegisterFormProps {\n    fullname: string,\n    username:string,\n    email:string,\n    password: string,\n    password2: string,\n\n}\n\n\nconst RegisterFormSchema = yup.object().shape({\n    email: yup.string().email('Неверая почта').required('Ввeдите почту'),\n    username: yup.string().required('Ввeдите логин'),\n    fullname: yup.string().required('Ввeдите свое полное имя'),\n    password: yup.string().min(6, 'Минимальная длина пароля 6 символов').required('Введите пароль'),\n    password2: yup.string().oneOf([yup.ref('password') , undefined], 'Пароль не совпадают')\n});\n\nexport const RegisterModal:React.FC<RegisterModalProps>  = ({open, onClose}):React.ReactElement => {\n\n    const {control, handleSubmit, errors} = useForm<RegisterFormProps>({\n        resolver: yupResolver(RegisterFormSchema)\n\n    });\n    const loadingStatus = useSelector(selectUserStatus)\nconsole.log(loadingStatus)\n    const dispatch = useDispatch()\n    const onSubmit = async (data: RegisterFormProps) => {\n        dispatch(fetchUserSighUp(data))\n    }\n    React.useEffect(() => {\n        if (loadingStatus === LoadingStatus.SUCCESS) {\n\n            onClose();\n        } else if (loadingStatus === LoadingStatus.ERROR) {\n\n        }\n\n    }, [loadingStatus, onClose]);\n    const classes  = useStyles()\n    return (\n                    <ModalBlock\n                        visible={open}\n                        onClose={onClose}\n                        classes={classes}\n                        title=\"Создайте учетную запись\">\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <FormControl className={classes.loginFormControl} component=\"fieldset\" fullWidth>\n                                <FormGroup aria-label=\"position\" row>\n                                    <Controller\n                                        as={TextField}\n                                        control={control}\n                                        className={classes.registerField}\n                                        autoFocus\n                                        id=\"fullname\"\n                                        name={'fullname'}\n                                        label=\"Полное имя\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"filled\"\n                                        type=\"fullname\"\n                                        fullWidth\n                                        helperText={errors.fullname?.message}\n                                        error={!!errors.fullname}\n                                        defaultValue=''\n                                    />\n                                    <Controller\n                                        as={TextField}\n                                        control={control}\n                                        className={classes.registerField}\n                                        autoFocus\n                                        id=\"email\"\n                                        name={'email'}\n                                        label=\"E-Mail\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"filled\"\n                                        type=\"email\"\n                                        fullWidth\n                                        defaultValue=''\n                                        helperText={errors.email?.message}\n                                        error={!!errors.email}\n                                    />\n                                    <Controller\n                                        as={TextField}\n                                        control={control}\n                                        className={classes.registerField}\n                                        autoFocus\n                                        id=\"username\"\n                                        label=\"никнейм\"\n                                        name={'username'}\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"filled\"\n                                        type=\"text\"\n                                        fullWidth\n                                        helperText={errors.username?.message}\n                                        error={!!errors.username}\n\n                                    />\n\n                                    <Controller\n                                        as={TextField}\n                                        control={control}\n                                        className={classes.registerField}\n                                        autoFocus\n                                        id=\"password\"\n                                        name={'password'}\n                                        label=\"Пароль\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"filled\"\n                                        type=\"password\"\n                                        fullWidth\n                                        helperText={errors.password?.message}\n                                        error={!!errors.password}\n                                    />\n                                    <Controller\n                                        as={TextField}\n                                        control={control}\n                                        className={classes.registerField}\n                                        autoFocus\n                                        id=\"password2\"\n                                        name={'password2'}\n                                        label=\"Повторите пароль\"\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant=\"filled\"\n                                        type=\"password\"\n                                        fullWidth\n                                        helperText={errors.password2?.message}\n                                        error={!!errors.password2}\n                                    />\n                                    <Button type='submit' variant=\"contained\" color=\"primary\" fullWidth>\n                                        Создать аккаунт\n                                    </Button>\n                                </FormGroup>\n                            </FormControl>\n                        </form>\n                    </ModalBlock>\n    )\n}\n","/home/evgeny/twitter/twitter-clone/src/store/ducks/tweets/contracts/ActionTypes.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/users/actionCreators.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/tweet/actionCreators.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/tweet/contracts/ActionTypes.ts",[],"/home/evgeny/twitter/twitter-clone/src/services/api/tagsApi.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/tags/actionCreators.ts",[],"/home/evgeny/twitter/twitter-clone/src/services/api/authApi.ts",[],"/home/evgeny/twitter/twitter-clone/src/services/api/tweetsApi.ts",["252"],"import {axios} from '../../core/axios'\nimport {Tweet, TweetsState} from \"../../store/ducks/tweets/contracts/state\";\n\n\ninterface Response<T>{\n    status:string,\n    data:T\n}\n\n export const TweetsApi ={\n    async  fetchTweets():Promise<Tweet[]>{\n        const { data} =  await axios.get<Response<Tweet[]>>('/tweets')\n        return data.data\n},\n\n     async fetchTweetData(id:string):Promise<Tweet>{\n         const { data} =  await axios.get<Response<Tweet>>(`/tweets/` + id)\n         return data.data\n     },\n     async addTweetData(payload:{\n         text:string ,images:string[]\n     }):Promise<Tweet>{\n         const { data} = await axios.post<Response<Tweet>>(`/tweets`, payload)\n         return data.data\n     },\n\n    removeTweet:(id:string):Promise<void> => axios.delete(`/tweets/`+ id)\n\n\n\n }\n\n\n\n","/home/evgeny/twitter/twitter-clone/src/store/ducks/tags/contracts/state.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/tweets/actionCreators.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/tweets/selectors.ts",["253"],"import {AddFormState, LoadingStatus, TweetsState} from \"./contracts/state\";\nimport {RootState} from \"../../store\";\nimport {createSelector} from \"reselect\";\n\n\nexport  const  selectTweetsState= (state:RootState): TweetsState =>  state.tweets\n\nexport  const selectTweetsItems =  (state:RootState) => selectTweetsState(state).items\n\nexport  const selectLoadingState = (state:RootState) : LoadingStatus => selectTweetsState(state).LoadingStatus\n\nexport const  selectIsTweetsLoaded = (state:RootState) : boolean =>\n    selectLoadingState(state) === LoadingStatus.LOADED\n\n\nexport const  selectAddFormState = (state:RootState) : AddFormState =>\n    selectTweetsState(state).addFormState\n\n\nexport const  selectIsTweetsLoading = (state:RootState) : boolean =>\n    selectLoadingState(state) === LoadingStatus.LOADING","/home/evgeny/twitter/twitter-clone/src/pages/Home/theme.tsx",[],"/home/evgeny/twitter/twitter-clone/src/components/SearchTextField.tsx",[],"/home/evgeny/twitter/twitter-clone/src/components/BackButton.tsx",[],"/home/evgeny/twitter/twitter-clone/src/components/AddTweetForm.tsx",[],"/home/evgeny/twitter/twitter-clone/src/components/Users.tsx",[],"/home/evgeny/twitter/twitter-clone/src/pages/Home/components/FullTweet.tsx",[],"/home/evgeny/twitter/twitter-clone/src/components/SideMenu.tsx",["254","255","256"],"import React from 'react'\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {Button, Hidden, Typography} from \"@material-ui/core\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport {useHomeStyles} from '../pages/Home/theme';\nimport {ModalBlock} from \"./ModalBlock\";\nimport {AddTweetForm} from \"./AddTweetForm\";\nimport {Link} from 'react-router-dom';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {useDispatch} from \"react-redux\";\nimport {setUserLoadingStatus} from '../store/ducks/user/actionCreators';\nimport {LoadingStatus} from \"../store/ducks/tweets/contracts/state\";\n\ninterface SideMenuProps {\n    classes: ReturnType<typeof useHomeStyles>;\n}\n\n\nexport const SideMenu: React.FC<SideMenuProps> = ({classes}: SideMenuProps): React.ReactElement => {\n\n    const [visibleAddTweetModal, setVisibleAddTweetModal] = React.useState<boolean>(false)\n    const dispatch = useDispatch()\n    const onCloseAddTweetModal = () => {\n        setVisibleAddTweetModal(false)\n    }\n\n    const onOpenAddTweetModal = () => {\n        setVisibleAddTweetModal(true)\n    }\n\n    const exitProfile = () => {\n        window.localStorage.clear()\n        window.location.reload();\n    }\n\n    return (\n        <div style={{position: 'sticky', top: '0'}}>\n            <ul className={classes.sideMenuList}>\n                <li className={classes.sideMenuListItem}>\n                    <Link to={'/home'}>\n                        <div>\n\n                            <TwitterIcon style={{marginRight: '10px'}} className={classes.logo} color='primary'/>\n\n                        </div>\n                    </Link>\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <div>\n\n                        <SearchIcon style={{marginRight: '10px'}} color='primary'/>\n                        <Hidden smDown>\n                            <Typography variant='h6'>Поиск</Typography>\n                        </Hidden>\n\n                    </div>\n\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <div>\n\n                        <NotificationsIcon style={{marginRight: '10px'}} color='primary'/>\n                        <Hidden smDown>\n                            <Typography variant='h6'>Уведомления</Typography>\n                        </Hidden>\n                    </div>\n\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <div>\n\n                        <EmailIcon style={{marginRight: '10px'}} color='primary'/>\n                        <Hidden smDown>\n                            <Typography variant='h6'>Сообщения</Typography>\n                        </Hidden>\n\n                    </div>\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <div>\n\n                        <BookmarkIcon style={{marginRight: '10px'}} color='primary'/>\n                        <Hidden smDown>\n                            <Typography variant='h6'>Закладки</Typography>\n                        </Hidden>\n\n                    </div>\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <div>\n                        <ListAltIcon style={{marginRight: '10px'}} color='primary'/>\n                        <Hidden smDown>\n                            <Typography variant='h6'>Список</Typography>\n                        </Hidden>\n\n                    </div>\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <div>\n\n                        <PersonIcon style={{marginRight: '10px'}} color='primary'/>\n                        <Hidden smDown>\n                            <Typography variant='h6'>Профиль</Typography>\n                        </Hidden>\n\n                    </div>\n                </li>\n                <li onClick={exitProfile} className={classes.sideMenuListItem}>\n                    <div>\n\n                        <ExitToAppIcon style={{marginRight: '10px'}} color='primary'/>\n                        <Hidden smDown>\n                            <Typography variant='h6'>Выйти</Typography>\n                        </Hidden>\n\n                    </div>\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <Button onClick={onOpenAddTweetModal} className={classes.SideMenuTweetButton} variant='contained'\n                            color='primary'\n                            fullWidth={true}>\n                        <Hidden smDown>\n                            Твитнуть\n                        </Hidden>\n                        <Hidden mdUp>\n\n                            <CreateIcon/>\n                        </Hidden>\n                    </Button>\n                    <ModalBlock visible={visibleAddTweetModal} onClose={onCloseAddTweetModal}>\n                        <div style={{width: '450px'}}>\n                            <AddTweetForm maxRows={15} classes={classes}/>\n                        </div>\n\n                    </ModalBlock>\n                </li>\n\n            </ul>\n        </div>\n    )\n}","/home/evgeny/twitter/twitter-clone/src/core/axios.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/users/selectors.ts",[],["257","258"],"/home/evgeny/twitter/twitter-clone/src/components/Tweet/index.tsx",["259","260"],"import {Avatar, Paper, Typography, Menu, MenuItem} from '@material-ui/core'\nimport React from 'react'\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport RepostIcon from '@material-ui/icons/Repeat';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport LikeIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport classNames from 'classnames'\nimport {useHomeStyles} from '../../pages/Home/theme';\nimport {Link, useHistory} from 'react-router-dom';\nimport {formatDate} from \"../../utils/formatDate\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport {dispatch} from \"jest-circus/build/state\";\nimport {RemoveTweet} from \"../../store/ducks/tweets/actionCreators\";\nimport {useDispatch} from \"react-redux\";\n\n\ninterface TweetProps {\n    _id: string;\n    text: string;\n    createdAt: string;\n    classes: ReturnType<typeof useHomeStyles>;\n    user: {\n        fullname: string;\n        username: string;\n        avatarUrl: string;\n\n    };\n    images: string[]\n}\n\nexport const Tweet: React.FC<TweetProps> = ({\n                                                classes,\n                                                text,\n                                                user,\n                                                _id,\n                                                createdAt,\n                                                images\n                                            }: TweetProps): React.ReactElement => {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const history = useHistory();\n    const dispatch = useDispatch()\n    console.log(images)\n    const handleClickTweet = (event: React.MouseEvent<HTMLAnchorElement>): void => {\n        event.preventDefault();\n        history.push(`/home/tweet/${_id}`);\n    };\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        event.stopPropagation();\n        event.preventDefault();\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (event: React.MouseEvent<HTMLElement>): void => {\n        event.stopPropagation();\n        event.preventDefault();\n        setAnchorEl(null);\n    };\n\n    const handleRemove = (event: React.MouseEvent<HTMLElement>): void => {\n        handleClose(event);\n          if (window.confirm('Вы действительно хотите удалить твит?')) {\n              dispatch(RemoveTweet(_id));\n          }\n    };\n\n\n    return <Link className={classes.tweetWrapper} to={`/home/tweet/${_id}`}>\n        <Paper className={classNames(classes.tweet, classes.tweetsHeader)} variant={'outlined'}>\n\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                marginBottom: '15px',\n\n\n            }}>\n                <Avatar style={{marginRight: '15px'}} alt={`Аватарка пользователя ${user.fullname}`}\n                        src={user.avatarUrl}/>\n\n                <div>\n                    <div>\n                        <b>{user.fullname}</b>\n                        <span className={classes.tweetsUserName}>@{user.username}</span>&nbsp;\n                        <span className={classes.tweetsUserName}>. </span>&nbsp;\n                        <span className={classes.tweetsUserName}>{formatDate(new Date(createdAt))} </span>&nbsp;\n\n                        <IconButton\n                            aria-label=\"more\"\n                            aria-controls=\"long-menu\"\n                            aria-haspopup=\"true\"\n                            onClick={handleClick}>\n                            <MoreVertIcon/>\n                        </IconButton>\n\n                        <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\n                            <MenuItem onClick={handleClose}>Редактировать</MenuItem>\n                            <MenuItem onClick={handleRemove}>Удалить твит</MenuItem>\n                        </Menu>\n                    </div>\n                </div>\n\n\n            </div>\n\n            <Typography variant={'body1'} gutterBottom>\n                {text}\n            </Typography>\n            {images && images.map(el => {\n                return <img style={{width: '100%'}} key={el} src={el} alt=\"\"/>\n            })}\n            <div className={classes.tweetFooter}>\n                <IconButton color='primary'>\n                    <CommentIcon style={{fontSize: '20px'}}/>\n                    <span style={{fontSize: '16px', marginLeft: '5px'}}>1</span>\n                </IconButton>\n\n                <IconButton color='primary'>\n                    <RepostIcon style={{fontSize: '20px'}}/>\n\n                </IconButton>\n                <IconButton color='primary'>\n                    <LikeIcon style={{fontSize: '20px'}}/>\n\n                </IconButton>\n                <IconButton color='primary'>\n                    <ReplyIcon style={{fontSize: '20px'}}/>\n                </IconButton>\n            </div>\n\n\n        </Paper>\n    </Link>\n}","/home/evgeny/twitter/twitter-clone/src/components/Tags.tsx",[],"/home/evgeny/twitter/twitter-clone/src/components/ModalBlock/index.tsx",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/tweet/selectors.ts",[],"/home/evgeny/twitter/twitter-clone/src/store/ducks/tags/selectors.ts",[],"/home/evgeny/twitter/twitter-clone/src/utils/formatDate.ts",[],"/home/evgeny/twitter/twitter-clone/src/utils/uploadImages.ts",[],"/home/evgeny/twitter/twitter-clone/src/components/UploadImages.tsx",["261","262","263"],"import React from 'react';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ImageOutlinedIcon from \"@material-ui/icons/ImageOutlined\";\nimport {useStyles} from \"../pages/SignIn\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ImageObj } from './AddTweetForm';\n\ninterface UploadImagesProps {\n    images: ImageObj[]\n    onChangesImages: (callback :(prev:ImageObj[]) => ImageObj[]) => void\n}\n\n\nexport const UploadImages: React.FC<UploadImagesProps> = ({images,onChangesImages}) => {\n    const clasess = useStyles()\n    const inputRef = React.useRef<HTMLInputElement>(null)\n\n    const onClickImage = () => {\n        if (inputRef.current) {\n            inputRef.current.click()\n        }\n    }\n\n    const removeImage = (url: string) => {\n        onChangesImages(prev => prev.filter(obj => obj.blobUrl !== url))\n    }\n    const handleChangeFileInput = React.useCallback((event: Event) => {\n        if (event.target) {\n            const target = (event.target as HTMLInputElement)\n            const file = target.files?.[0]\n            if (file) {\n                const fileObj = new Blob([file])\n                onChangesImages( prev=>[...prev, {\n                    blobUrl:URL.createObjectURL(fileObj),\n                    file\n                }])\n            }\n        }\n    }, [])\n\n    React.useEffect(() => {\n        if (inputRef.current) {\n            inputRef.current.addEventListener('change', handleChangeFileInput)\n        }\n    }, [])\n    return (\n        <div>\n            <input ref={inputRef} type=\"file\" style={{display: 'none'}} id={'upload-label'}/>\n            <div style={{display: 'flex', marginTop: \"20px\", marginBottom: \"20px\"}}>\n                {images.map(obj => {\n                        return <>\n                            <div key={obj.blobUrl} style={{\n                                width: \"50px\", height: \"50px\", borderRadius: '6px',\n                                marginRight: '15px'\n                            }}>\n                                <img style={{width: '100%', height: '100%'}} src={obj.blobUrl} alt=\"photo\"/>\n                                <IconButton className={clasess.imageIconRemove} onClick={(): void => removeImage(obj.blobUrl)}>\n                                    <CloseIcon style={{fontSize: 18}}/>\n                                </IconButton>\n\n                            </div>\n\n                        </>\n                    }\n                )}\n            </div>\n            <IconButton onClick={onClickImage} color=\"primary\">\n                <ImageOutlinedIcon style={{fontSize: 26}}/>\n            </IconButton>\n\n\n        </div>\n\n    )\n};\n",{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","severity":1,"message":"269","line":33,"column":8,"nodeType":"270","endLine":33,"endColumn":23,"suggestions":"271"},{"ruleId":"272","severity":1,"message":"273","line":1,"column":20,"nodeType":"274","messageId":"275","endLine":1,"endColumn":24},{"ruleId":"272","severity":1,"message":"276","line":8,"column":8,"nodeType":"274","messageId":"275","endLine":8,"endColumn":17},{"ruleId":"272","severity":1,"message":"277","line":9,"column":8,"nodeType":"274","messageId":"275","endLine":9,"endColumn":19},{"ruleId":"272","severity":1,"message":"278","line":10,"column":8,"nodeType":"274","messageId":"275","endLine":10,"endColumn":17},{"ruleId":"272","severity":1,"message":"279","line":11,"column":9,"nodeType":"274","messageId":"275","endLine":11,"endColumn":19},{"ruleId":"272","severity":1,"message":"273","line":2,"column":9,"nodeType":"274","messageId":"275","endLine":2,"endColumn":13},{"ruleId":"272","severity":1,"message":"280","line":2,"column":19,"nodeType":"274","messageId":"275","endLine":2,"endColumn":30},{"ruleId":"272","severity":1,"message":"281","line":4,"column":38,"nodeType":"274","messageId":"275","endLine":4,"endColumn":43},{"ruleId":"272","severity":1,"message":"282","line":2,"column":9,"nodeType":"274","messageId":"275","endLine":2,"endColumn":21},{"ruleId":"272","severity":1,"message":"283","line":1,"column":10,"nodeType":"274","messageId":"275","endLine":1,"endColumn":14},{"ruleId":"272","severity":1,"message":"284","line":1,"column":16,"nodeType":"274","messageId":"275","endLine":1,"endColumn":19},{"ruleId":"272","severity":1,"message":"285","line":1,"column":21,"nodeType":"274","messageId":"275","endLine":1,"endColumn":31},{"ruleId":"272","severity":1,"message":"286","line":2,"column":10,"nodeType":"274","messageId":"275","endLine":2,"endColumn":17},{"ruleId":"272","severity":1,"message":"287","line":9,"column":8,"nodeType":"274","messageId":"275","endLine":9,"endColumn":16},{"ruleId":"272","severity":1,"message":"288","line":10,"column":8,"nodeType":"274","messageId":"275","endLine":10,"endColumn":15},{"ruleId":"272","severity":1,"message":"289","line":11,"column":8,"nodeType":"274","messageId":"275","endLine":11,"endColumn":22},{"ruleId":"272","severity":1,"message":"290","line":12,"column":8,"nodeType":"274","messageId":"275","endLine":12,"endColumn":14},{"ruleId":"272","severity":1,"message":"291","line":13,"column":8,"nodeType":"274","messageId":"275","endLine":13,"endColumn":20},{"ruleId":"272","severity":1,"message":"292","line":14,"column":8,"nodeType":"274","messageId":"275","endLine":14,"endColumn":12},{"ruleId":"272","severity":1,"message":"293","line":15,"column":8,"nodeType":"274","messageId":"275","endLine":15,"endColumn":14},{"ruleId":"272","severity":1,"message":"294","line":18,"column":8,"nodeType":"274","messageId":"275","endLine":18,"endColumn":21},{"ruleId":"272","severity":1,"message":"295","line":13,"column":9,"nodeType":"274","messageId":"275","endLine":13,"endColumn":14},{"ruleId":"272","severity":1,"message":"296","line":14,"column":9,"nodeType":"274","messageId":"275","endLine":14,"endColumn":21},{"ruleId":"272","severity":1,"message":"297","line":2,"column":16,"nodeType":"274","messageId":"275","endLine":2,"endColumn":27},{"ruleId":"272","severity":1,"message":"298","line":3,"column":9,"nodeType":"274","messageId":"275","endLine":3,"endColumn":23},{"ruleId":"272","severity":1,"message":"299","line":17,"column":9,"nodeType":"274","messageId":"275","endLine":17,"endColumn":29},{"ruleId":"272","severity":1,"message":"300","line":18,"column":9,"nodeType":"274","messageId":"275","endLine":18,"endColumn":22},{"ruleId":"272","severity":1,"message":"301","line":28,"column":11,"nodeType":"274","messageId":"275","endLine":28,"endColumn":19},{"ruleId":"264","replacedBy":"302"},{"ruleId":"266","replacedBy":"303"},{"ruleId":"272","severity":1,"message":"304","line":13,"column":9,"nodeType":"274","messageId":"275","endLine":13,"endColumn":17},{"ruleId":"272","severity":1,"message":"305","line":45,"column":11,"nodeType":"274","messageId":"275","endLine":45,"endColumn":27},{"ruleId":"268","severity":1,"message":"306","line":39,"column":8,"nodeType":"270","endLine":39,"endColumn":10,"suggestions":"307"},{"ruleId":"268","severity":1,"message":"308","line":45,"column":8,"nodeType":"270","endLine":45,"endColumn":10,"suggestions":"309"},{"ruleId":"310","severity":1,"message":"311","line":56,"column":33,"nodeType":"312","endLine":56,"endColumn":109},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["315"],"@typescript-eslint/no-unused-vars","'User' is defined but never used.","Identifier","unusedVar","'FormGroup' is defined but never used.","'FormControl' is defined but never used.","'TextField' is defined but never used.","'ModalBlock' is defined but never used.","'RemoveTweet' is defined but never used.","'Tweet' is defined but never used.","'AddFormState' is defined but never used.","'call' is defined but never used.","'put' is defined but never used.","'takeLatest' is defined but never used.","'TagsApi' is defined but never used.","'ListItem' is defined but never used.","'Divider' is defined but never used.","'ListItemAvatar' is defined but never used.","'Avatar' is defined but never used.","'ListItemText' is defined but never used.","'List' is defined but never used.","'Button' is defined but never used.","'PersonAddIcon' is defined but never used.","'Color' is defined but never used.","'Notification' is defined but never used.","'TweetsState' is defined but never used.","'createSelector' is defined but never used.","'setUserLoadingStatus' is defined but never used.","'LoadingStatus' is defined but never used.","'dispatch' is assigned a value but never used.",["313"],["314"],"'dispatch' is defined but never used.","'handleClickTweet' is assigned a value but never used.","React Hook React.useCallback has a missing dependency: 'onChangesImages'. Either include it or remove the dependency array. If 'onChangesImages' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["316"],"React Hook React.useEffect has a missing dependency: 'handleChangeFileInput'. Either include it or remove the dependency array.",["317"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},"Update the dependencies array to be: [Auth, history, isReady]",{"range":"324","text":"325"},"Update the dependencies array to be: [onChangesImages]",{"range":"326","text":"327"},"Update the dependencies array to be: [handleChangeFileInput]",{"range":"328","text":"329"},[1059,1074],"[Auth, history, isReady]",[1299,1301],"[onChangesImages]",[1460,1462],"[handleChangeFileInput]"]