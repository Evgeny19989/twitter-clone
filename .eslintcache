[{"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/index.tsx":"1","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/theme.ts":"2","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/store.ts":"3","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/App.tsx":"4","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/RootReducer.ts":"5","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/sagas.ts":"6","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/pages/Home/index.tsx":"7","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/pages/SignIn.tsx":"8","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweets/saga.ts":"9","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweets/reducer.ts":"10","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tags/saga.ts":"11","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tags/reducer.ts":"12","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweet/reducer.ts":"13","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweet/saga.ts":"14","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweets/actionCreators.ts":"15","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweets/selectors.ts":"16","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tags/actionCreators.ts":"17","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/pages/Home/theme.tsx":"18","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/SideMenu.tsx":"19","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/AddTweetForm.tsx":"20","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/SearchTextField.tsx":"21","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/Tags.tsx":"22","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/BackButton.tsx":"23","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/pages/Home/components/FullTweet.tsx":"24","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweet/actionCreators.ts":"25","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweet/contracts/ActionTypes.ts":"26","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweets/contracts/state.ts":"27","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweets/contracts/ActionTypes.ts":"28","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tags/contracts/state.ts":"29","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/services/api/tweetsApi.ts":"30","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/services/api/tagsApi.ts":"31","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/ModalBlock/index.tsx":"32","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/Tweet/index.tsx":"33","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/core/axios.ts":"34","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/utils/formatDate.ts":"35","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweet/selectors.ts":"36","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tags/selectors.ts":"37","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/pages/Signin/components/LoginModal.tsx":"38","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/pages/Signin/components/RegisterModal.tsx":"39"},{"size":712,"mtime":1614602241085,"results":"40","hashOfConfig":"41"},{"size":2551,"mtime":1614602241089,"results":"42","hashOfConfig":"41"},{"size":859,"mtime":1614602241089,"results":"43","hashOfConfig":"41"},{"size":610,"mtime":1614602241081,"results":"44","hashOfConfig":"41"},{"size":310,"mtime":1614602241085,"results":"45","hashOfConfig":"41"},{"size":309,"mtime":1614602241089,"results":"46","hashOfConfig":"41"},{"size":6106,"mtime":1614602241085,"results":"47","hashOfConfig":"41"},{"size":4856,"mtime":1614608352819,"results":"48","hashOfConfig":"41"},{"size":1210,"mtime":1614602241089,"results":"49","hashOfConfig":"41"},{"size":1526,"mtime":1614606639732,"results":"50","hashOfConfig":"41"},{"size":575,"mtime":1614602241089,"results":"51","hashOfConfig":"41"},{"size":923,"mtime":1614602241089,"results":"52","hashOfConfig":"41"},{"size":1105,"mtime":1614606408517,"results":"53","hashOfConfig":"41"},{"size":830,"mtime":1614606074800,"results":"54","hashOfConfig":"41"},{"size":1496,"mtime":1614606516483,"results":"55","hashOfConfig":"41"},{"size":805,"mtime":1614602241089,"results":"56","hashOfConfig":"41"},{"size":1201,"mtime":1614602241085,"results":"57","hashOfConfig":"41"},{"size":6865,"mtime":1614602241085,"results":"58","hashOfConfig":"41"},{"size":4747,"mtime":1614602241085,"results":"59","hashOfConfig":"41"},{"size":4656,"mtime":1614602241085,"results":"60","hashOfConfig":"41"},{"size":986,"mtime":1614602241085,"results":"61","hashOfConfig":"41"},{"size":2043,"mtime":1614602241085,"results":"62","hashOfConfig":"41"},{"size":428,"mtime":1614602241085,"results":"63","hashOfConfig":"41"},{"size":4359,"mtime":1614602241085,"results":"64","hashOfConfig":"41"},{"size":1117,"mtime":1614606408537,"results":"65","hashOfConfig":"41"},{"size":744,"mtime":1614606537154,"results":"66","hashOfConfig":"41"},{"size":537,"mtime":1614602241089,"results":"67","hashOfConfig":"41"},{"size":1460,"mtime":1614607428991,"results":"68","hashOfConfig":"41"},{"size":277,"mtime":1614602241085,"results":"69","hashOfConfig":"41"},{"size":686,"mtime":1614602241085,"results":"70","hashOfConfig":"41"},{"size":238,"mtime":1614602241085,"results":"71","hashOfConfig":"41"},{"size":1476,"mtime":1614602241085,"results":"72","hashOfConfig":"41"},{"size":4378,"mtime":1614602241085,"results":"73","hashOfConfig":"41"},{"size":175,"mtime":1614602241085,"results":"74","hashOfConfig":"41"},{"size":238,"mtime":1614602241089,"results":"75","hashOfConfig":"41"},{"size":679,"mtime":1614602241089,"results":"76","hashOfConfig":"41"},{"size":654,"mtime":1614602241089,"results":"77","hashOfConfig":"41"},{"size":2714,"mtime":1614609725289,"results":"78","hashOfConfig":"41"},{"size":2445,"mtime":1614608352803,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1yh3ggv",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/index.tsx",[],["168","169"],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/theme.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/store.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/App.tsx",["170"],"import React from 'react';\nimport {SignIn} from \"./pages/SignIn\";\nimport {Switch , Route, useHistory} from 'react-router-dom'\nimport {Home} from \"./pages/Home/index\";\n\n\n\n\nfunction App() {\n    const history = useHistory();\n    React.useEffect(() => {\n       if (history.location.pathname === '/') {\n            history.push('/home');\n        }\n    }, []);\n\n\n    return (\n        <div className=\"App\">\n            <Switch>\n                <Route exact path='/signin' component={SignIn}/>\n                <Route  path='/home' component={Home}/>\n            </Switch>\n\n        </div>\n    );\n}\n\nexport default App;\n","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/RootReducer.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/sagas.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/pages/Home/index.tsx",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/pages/SignIn.tsx",["171","172","173","174"],"import React, {ReactElement} from \"react\";\nimport {makeStyles, Typography} from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport Button from \"@material-ui/core/Button\";\nimport PeopleOutlineIcon from '@material-ui/icons/PeopleOutline';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport {ModalBlock} from '../components/ModalBlock';\nimport {LoginModal} from \"./Signin/components/LoginModal\";\nimport {RegisterModal} from \"./Signin/components/RegisterModal\";\n\nexport const useStyles = makeStyles((theme) => ({\n    wrapper: {\n        display: 'flex',\n        height: '100vh'\n    },\n    blueSide: {\n        background: '#71C9F8',\n        flex: '0 0 50%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        overflow: 'hidden',\n        position: 'relative'\n    },\n    blueSideListInfo: {\n        listStyle: 'none',\n        position: 'relative',\n        padding: '0',\n        margin: '0',\n        '& h6': {\n            color: 'white',\n            display: 'flex',\n            alignItems: 'center',\n        },\n        fontWeight: 600,\n    },\n\n    blueSidesListIcons: {\n        fontSize: '30px',\n        marginRight: '15px'\n    },\n    loginSide: {\n        flex: '0 0 50%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n\n    },\n    loginSideTwitterIcon: {\n        fontSize: '45px'\n    }\n    ,\n    loginSideWrapper: {\n        maxWidth: '380px'\n    },\n    loginSideTitle: {\n        fontWeight: 700,\n        fontSize: '32px',\n        marginBottom: '45px',\n        marginTop: '20px',\n    },\n    blueSideBigIcon: {\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        width: '250%',\n        height: '250%',\n        transform: 'translate(-50%,-50%)',\n    },\n    registerField: {\n        marginBottom: theme.spacing(5),\n    },\n    loginFormControl: {\n        marginBottom: theme.spacing(2),\n    },\n    loginSideField: {\n        marginBottom: 18,\n    },\n\n\n}))\n\nexport const SignIn: React.FC = (): ReactElement => {\n\n\n    const classes = useStyles()\n    const [visibleModal, setVisibleModal] = React.useState<'signIn' | 'signUp'>();\n\n    const handleClickOpenSignIn = (): void => {\n        setVisibleModal('signIn');\n    };\n\n    const handleClickOpenSignUp = (): void => {\n        setVisibleModal('signUp');\n    };\n\n    const handleCloseModal = (): void => {\n        setVisibleModal(undefined);\n    };\n\n\n    return (\n        <div className={classes.wrapper}>\n            <div className={classes.blueSide}>\n                <TwitterIcon className={classes.blueSideBigIcon} color='primary'/>\n                <ul className={classes.blueSideListInfo}>\n                    <li><Typography variant='h6'>\n                        <SearchIcon className={classes.blueSidesListIcons}/>\n                        Читайте о том, что вам интересно</Typography></li>\n                    <li><Typography variant='h6'>\n                        <PeopleOutlineIcon className={classes.blueSidesListIcons}/>\n                        Узнайте ,о чем говорят в мире</Typography></li>\n                    <li><Typography variant='h6'>\n                        <ChatBubbleOutlineIcon className={classes.blueSidesListIcons}/>\n                        Присоединяйтесь к общению</Typography></li>\n                </ul>\n            </div>\n\n            <div className={classes.loginSide}>\n                <div className={classes.loginSideWrapper}>\n                    <TwitterIcon className={classes.loginSideTwitterIcon} color='primary'/>\n                    <Typography className={classes.loginSideTitle} variant='h4'>Узнайте, что происходит в мире прямо\n                        сейчас</Typography>\n                    <Typography>\n\n                        <b>\n                            Присоединяйтесь к Твиттеру прямо сейчас</b></Typography>\n                    <br/>\n                    <Button onClick={handleClickOpenSignUp} style={{marginBottom: '20px'}} variant='contained'\n                            color='primary' fullWidth>Зарегистрироваться </Button>\n                    <Button onClick={handleClickOpenSignIn} variant='outlined' color='primary' fullWidth>Войти </Button>\n                </div>\n            </div>\n            <LoginModal open={visibleModal === 'signIn'} onClose={handleCloseModal}/>\n            <RegisterModal open={visibleModal === 'signUp'} onClose={handleCloseModal}/>\n        </div>\n\n    );\n}\n\n\nexport default SignIn;","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweets/saga.ts",["175"],"import {call, put, takeEvery} from 'redux-saga/effects'\nimport {AddTweet, SetAddFormState, setTweetLoading, SetTweets} from \"./actionCreators\";\nimport {TweetsApi} from \"../../../services/api/tweetsApi\";\nimport {AddFormState, LoadingStatus, Tweet} from \"./contracts/state\";\nimport {FetchAddTweetActionInterface, TweetsActionType} from './contracts/ActionTypes';\n\n\n\n// ...\n\n// Our worker Saga: will perform the async increment task\nexport function* fetchTweetsRequest() {\n\n    try {\n\n        const data = yield call(TweetsApi.fetchTweets)\n        yield put(SetTweets(data))\n    } catch (error) {\n        yield put(setTweetLoading(LoadingStatus.ERROR))\n    }\n\n\n}\n\n\nexport function* fetchAddTweetRequest({payload:text}: FetchAddTweetActionInterface) {\n\n\n    try {\n\n        const item = yield call(TweetsApi.addTweetData, text)\n        yield put(AddTweet(item))\n    } catch\n        (error) {\n        yield put(SetAddFormState(AddFormState.ERROR))\n    }\n\n\n}\n\n// Our watcher Saga: spawn a new incrementAsync task on each INCREMENT_ASYNC\nexport function* tweetsSaga() {\n    yield takeEvery(TweetsActionType.FETCH_TWEETS, fetchTweetsRequest)\n    yield takeEvery(TweetsActionType.FETCH_ADD_TWEET, fetchAddTweetRequest)\n}","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweets/reducer.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tags/saga.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tags/reducer.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweet/reducer.ts",["176"],"import produce, {Draft} from 'immer'\nimport {AddFormState, LoadingStatus} from '../tweets/contracts/state';\nimport { TweetActions } from './actionCreators';\nimport { TweetActionsType } from './contracts/ActionTypes';\n\nimport {TweetState} from './contracts/state';\n\n\nconst initialTweetState: TweetState = {\n    data: undefined,\n    LoadingStatus: LoadingStatus.NEVER,\n\n\n}\n\nexport const TweetReducer = produce((draft: Draft<TweetState>, action: TweetActions) => {\n\n\n    switch (action.type) {\n        case TweetActionsType.SET_DATA :\n            draft.data = action.payload\n            draft.LoadingStatus = LoadingStatus.LOADED\n            break;\n\n        case TweetActionsType.FETCH_ADD_DATA:\n            draft.data = undefined\n            draft.LoadingStatus = LoadingStatus.LOADING\n            break\n\n\n  /*      case TweetActionsType.FETCH_ADD_DATA:\n          draft.addFormState = AddFormState.LOADING\n            break\n*/\n        case TweetActionsType.SET_LOADING_STATE:\n            draft.LoadingStatus = action.payload\n            break\n        default:\n            break\n    }\n\n\n}, initialTweetState)","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweet/saga.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweets/actionCreators.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweets/selectors.ts",["177"],"import {AddFormState, LoadingStatus, TweetsState} from \"./contracts/state\";\nimport {RootState} from \"../../store\";\nimport {createSelector} from \"reselect\";\n\n\nexport  const  selectTweetsState= (state:RootState): TweetsState =>  state.tweets\n\nexport  const selectTweetsItems =  (state:RootState) => selectTweetsState(state).items\n\nexport  const selectLoadingState = (state:RootState) : LoadingStatus => selectTweetsState(state).LoadingStatus\n\nexport const  selectIsTweetsLoaded = (state:RootState) : boolean =>\n    selectLoadingState(state) === LoadingStatus.LOADED\n\n\nexport const  selectAddFormState = (state:RootState) : AddFormState =>\n    selectTweetsState(state).addFormState\n\n\nexport const  selectIsTweetsLoading = (state:RootState) : boolean =>\n    selectLoadingState(state) === LoadingStatus.LOADING","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tags/actionCreators.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/pages/Home/theme.tsx",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/SideMenu.tsx",["178","179"],"import React, {ReactElement, useState} from 'react'\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {Hidden, Typography} from \"@material-ui/core\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport {Button} from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport { useHomeStyles } from '../pages/Home/theme';\nimport {ModalBlock} from \"./ModalBlock\";\nimport {AddTweetForm} from \"./AddTweetForm\";\nimport { Link } from 'react-router-dom';\n\ninterface SideMenuProps {\n    classes: ReturnType<typeof useHomeStyles>;\n}\n\n\nexport const SideMenu: React.FC<SideMenuProps> = ({classes}: SideMenuProps): React.ReactElement => {\n\n    const [visibleAddTweetModal, setVisibleAddTweetModal] = React.useState<boolean>(false)\n\n    const onCloseAddTweetModal = () =>{\n        setVisibleAddTweetModal(false)\n    }\n\n    const onOpenAddTweetModal = () =>{\n        setVisibleAddTweetModal(true)\n    }\n\n    return (\n        <div style={{position:'sticky' , top:'0'}}>\n            <ul className={classes.sideMenuList}>\n                <li className={classes.sideMenuListItem}>\n                  <Link to={'/home'}>\n                    <div>\n\n                        <TwitterIcon style={{marginRight: '10px'}} className={classes.logo} color='primary'/>\n\n                    </div>\n                  </Link>\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <div>\n\n                        <SearchIcon style={{marginRight: '10px'}} color='primary'/>\n                        <Hidden smDown>\n                            <Typography variant='h6'>Поиск</Typography>\n                        </Hidden>\n\n                    </div>\n\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <div>\n\n                        <NotificationsIcon style={{marginRight: '10px'}} color='primary'/>\n                        <Hidden smDown>\n                            <Typography variant='h6'>Уведомления</Typography>\n                        </Hidden>\n                    </div>\n\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <div>\n\n                        <EmailIcon style={{marginRight: '10px'}} color='primary'/>\n                        <Hidden smDown>\n                            <Typography variant='h6'>Сообщения</Typography>\n                        </Hidden>\n\n                    </div>\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <div>\n\n                        <BookmarkIcon style={{marginRight: '10px'}} color='primary'/>\n                        <Hidden smDown>\n                            <Typography variant='h6'>Закладки</Typography>\n                        </Hidden>\n\n                    </div>\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <div>\n                        <ListAltIcon style={{marginRight: '10px'}} color='primary'/>\n                        <Hidden smDown>\n                            <Typography variant='h6'>Список</Typography>\n                        </Hidden>\n\n                    </div>\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <div>\n\n                        <PersonIcon style={{marginRight: '10px'}} color='primary'/>\n                        <Hidden smDown>\n                            <Typography variant='h6'>Профиль</Typography>\n                        </Hidden>\n\n                    </div>\n                </li>\n                <li className={classes.sideMenuListItem}>\n                    <Button onClick={onOpenAddTweetModal} className={classes.SideMenuTweetButton} variant='contained' color='primary'\n                            fullWidth={true}>\n                        <Hidden smDown>\n                            Твитнуть\n                        </Hidden>\n                        <Hidden mdUp>\n\n                            <CreateIcon/>\n                        </Hidden>\n                    </Button>\n                    <ModalBlock visible={visibleAddTweetModal}  onClose={onCloseAddTweetModal}>\n                        <div style={{width:'450px'}}>\n                            <AddTweetForm maxRows={15} classes={classes}/>\n                        </div>\n\n                    </ModalBlock>\n                </li>\n\n            </ul>\n        </div>\n    )\n}","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/AddTweetForm.tsx",["180"],"import React from 'react';\nimport classNames from 'classnames';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\nimport EmojiIcon from '@material-ui/icons/SentimentSatisfiedOutlined';\nimport {useHomeStyles} from '../pages/Home/theme';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {fetchAddTweet, FetchTweets} from '../store/ducks/tweets/actionCreators';\nimport {selectAddFormState} from \"../store/ducks/tweets/selectors\";\nimport Alert from '@material-ui/lab/Alert';\nimport {AddFormState} from \"../store/ducks/tweets/contracts/state\";\n\ninterface AddTweetFormProps {\n    classes: ReturnType<typeof useHomeStyles>;\n    maxRows?: number;\n}\n\nconst MAX_LENGTH = 280;\n\nexport const AddTweetForm: React.FC<AddTweetFormProps> = ({\n                                                              classes,\n                                                              maxRows,\n                                                          }: AddTweetFormProps): React.ReactElement => {\n    const [text, setText] = React.useState<string>('');\n\n    const textLimitPercent = Math.round((text.length / 280) * 100);\n    const textCount = MAX_LENGTH - text.length;\n    const dispatch = useDispatch()\n    const addFormState = useSelector(selectAddFormState)\n    const handleChangeTextare = (e: React.FormEvent<HTMLTextAreaElement>): void => {\n        if (e.currentTarget) {\n            setText(e.currentTarget.value);\n        }\n    };\n\n\n    const handleClickAddTweet = (): void => {\n\n        dispatch(fetchAddTweet(text))\n        setText('');\n\n    };\n\n    return (\n        <div>\n\n            <div className={classes.addFormBody}>\n                <Avatar\n                    className={classes.tweetAvatar}\n                    alt={`Аватарка пользователя UserAvatar`}\n                    src=\"https://pbs.twimg.com/media/Ea2MA_eWAAEFRcD.jpg:large\"\n                />\n                <TextareaAutosize\n                    onChange={handleChangeTextare}\n                    className={classes.addFormTextarea}\n                    placeholder=\"Что происходит?\"\n                    value={text}\n                    rowsMax={maxRows}\n                />\n            </div>\n            <div className={classes.addFormBottom}>\n                <div className={classNames(classes.tweetFooter, classes.addFormBottomActions)}>\n                    <IconButton color=\"primary\">\n                        <ImageOutlinedIcon style={{fontSize: 26}}/>\n                    </IconButton>\n                    <IconButton color=\"primary\">\n                        <EmojiIcon style={{fontSize: 26}}/>\n                    </IconButton>\n                </div>\n                <div className={classes.addFormBottomRight}>\n                    {text && (\n                        <>\n                            <span>{textCount}</span>\n                            <div className={classes.addFormCircleProgress}>\n                                <CircularProgress\n                                    variant=\"static\"\n                                    size={20}\n                                    thickness={5}\n                                    value={text.length >= MAX_LENGTH ? 100 : textLimitPercent}\n                                    style={text.length >= MAX_LENGTH ? {color: 'red'} : undefined}\n                                />\n                                <CircularProgress\n                                    style={{color: 'rgba(0, 0, 0, 0.1)'}}\n                                    variant=\"static\"\n                                    size={20}\n                                    thickness={5}\n                                    value={100}\n                                />\n                            </div>\n                        </>\n                    )}\n                    <Button\n                        onClick={handleClickAddTweet}\n                        disabled={!text || text.length >= MAX_LENGTH}\n                        color=\"primary\"\n                        variant=\"contained\">\n                        Твитнуть\n                    </Button>\n                </div>\n            </div>\n            { addFormState === AddFormState.ERROR &&\n            <Alert severity=\"error\">\n            Произошла ошибка ,невозможно добавить твит!!!\n            </Alert>}\n        </div>\n    );\n};\n","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/SearchTextField.tsx",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/Tags.tsx",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/BackButton.tsx",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/pages/Home/components/FullTweet.tsx",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweet/actionCreators.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweet/contracts/ActionTypes.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweets/contracts/state.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweets/contracts/ActionTypes.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tags/contracts/state.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/services/api/tweetsApi.ts",["181"],"import {axios} from '../../core/axios'\nimport {Tweet, TweetsState} from \"../../store/ducks/tweets/contracts/state\";\n\n\ninterface Response<T>{\n    status:string,\n    data:T\n}\n\n export const TweetsApi ={\n    async  fetchTweets():Promise<Tweet[]>{\n        const { data} =  await axios.get<Response<Tweet[]>>('/tweets')\n        return data.data\n},\n\n     async fetchTweetData(id:string):Promise<Tweet>{\n         const { data} =  await axios.get<Response<Tweet>>(`/tweets/` + id)\n         return data.data\n     },\n     async addTweetData(payload:string):Promise<Tweet>{\n         const { data} = await axios.post<Response<Tweet>>(`/tweets`, {text:payload})\n         return data.data\n     }\n }\n\n","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/services/api/tagsApi.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/ModalBlock/index.tsx",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/components/Tweet/index.tsx",["182"],"import {Avatar, Paper, Typography, Menu, MenuItem} from '@material-ui/core'\nimport React from 'react'\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport RepostIcon from '@material-ui/icons/Repeat';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport LikeIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport classNames from 'classnames'\nimport {useHomeStyles} from '../../pages/Home/theme';\nimport {Link, useHistory} from 'react-router-dom';\nimport {formatDate} from \"../../utils/formatDate\";\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\ninterface TweetProps {\n    _id: string;\n    text: string;\n    createdAt: string;\n    classes: ReturnType<typeof useHomeStyles>;\n    user: {\n        fullname: string;\n        username: string;\n        avatarUrl: string;\n\n    };\n}\n\nexport const Tweet: React.FC<TweetProps> = ({classes, text, user, _id, createdAt}: TweetProps): React.ReactElement => {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n    const history = useHistory();\n\n\n    const handleClickTweet = (event: React.MouseEvent<HTMLAnchorElement>): void => {\n        event.preventDefault();\n        history.push(`/home/tweet/${_id}`);\n    };\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        event.stopPropagation();\n        event.preventDefault();\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = (event: React.MouseEvent<HTMLElement>): void => {\n        event.stopPropagation();\n        event.preventDefault();\n        setAnchorEl(null);\n    };\n\n    const handleRemove = (event: React.MouseEvent<HTMLElement>): void => {\n        handleClose(event);\n        /*  if (window.confirm('Вы действительно хотите удалить твит?')) {\n              dispatch(removeTweet(_id));\n          }*/\n    };\n\n\n    return <Link className={classes.tweetWrapper} to={`/home/tweet/${_id}`}>\n        <Paper className={classNames(classes.tweet, classes.tweetsHeader)} variant={'outlined'}>\n\n            <div style={{\n                display: 'flex',\n                alignItems: 'center',\n                marginBottom: '15px',\n\n\n            }}>\n                <Avatar style={{marginRight: '15px'}} alt={`Аватарка пользователя ${user.fullname}`}\n                        src={user.avatarUrl}/>\n\n                <Typography>\n                    <div>\n                        <b>{user.fullname}</b>\n                        <span className={classes.tweetsUserName}>@{user.username}</span>&nbsp;\n                        <span className={classes.tweetsUserName}>. </span>&nbsp;\n                        <span className={classes.tweetsUserName}>{formatDate(new Date(createdAt))} </span>&nbsp;\n\n                        <IconButton\n                            aria-label=\"more\"\n                            aria-controls=\"long-menu\"\n                            aria-haspopup=\"true\"\n                            onClick={handleClick}>\n                            <MoreVertIcon/>\n                        </IconButton>\n\n                        <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\n                            <MenuItem onClick={handleClose}>Редактировать</MenuItem>\n                            <MenuItem onClick={handleRemove}>Удалить твит</MenuItem>\n                        </Menu>\n                    </div>\n                </Typography>\n\n\n            </div>\n\n            <Typography variant={'body1'} gutterBottom>\n                {text}\n            </Typography>\n            <div className={classes.tweetFooter}>\n                <IconButton color='primary'>\n                    <CommentIcon style={{fontSize: '20px'}}/>\n                    <span style={{fontSize: '16px', marginLeft: '5px'}}>1</span>\n                </IconButton>\n\n                <IconButton color='primary'>\n                    <RepostIcon style={{fontSize: '20px'}}/>\n\n                </IconButton>\n                <IconButton color='primary'>\n                    <LikeIcon style={{fontSize: '20px'}}/>\n\n                </IconButton>\n                <IconButton color='primary'>\n                    <ReplyIcon style={{fontSize: '20px'}}/>\n                </IconButton>\n            </div>\n\n\n        </Paper>\n    </Link>\n}","/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/core/axios.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/utils/formatDate.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tweet/selectors.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/store/ducks/tags/selectors.ts",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/pages/Signin/components/LoginModal.tsx",[],"/home/evgeny/Рабочий стол/Evgeny/twitter-clone/src/pages/Signin/components/RegisterModal.tsx",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":15,"column":8,"nodeType":"189","endLine":15,"endColumn":10,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":8,"column":8,"nodeType":"193","messageId":"194","endLine":8,"endColumn":17},{"ruleId":"191","severity":1,"message":"195","line":9,"column":8,"nodeType":"193","messageId":"194","endLine":9,"endColumn":19},{"ruleId":"191","severity":1,"message":"196","line":10,"column":8,"nodeType":"193","messageId":"194","endLine":10,"endColumn":17},{"ruleId":"191","severity":1,"message":"197","line":11,"column":9,"nodeType":"193","messageId":"194","endLine":11,"endColumn":19},{"ruleId":"191","severity":1,"message":"198","line":4,"column":38,"nodeType":"193","messageId":"194","endLine":4,"endColumn":43},{"ruleId":"191","severity":1,"message":"199","line":2,"column":9,"nodeType":"193","messageId":"194","endLine":2,"endColumn":21},{"ruleId":"191","severity":1,"message":"200","line":3,"column":9,"nodeType":"193","messageId":"194","endLine":3,"endColumn":23},{"ruleId":"191","severity":1,"message":"201","line":1,"column":16,"nodeType":"193","messageId":"194","endLine":1,"endColumn":28},{"ruleId":"191","severity":1,"message":"202","line":1,"column":30,"nodeType":"193","messageId":"194","endLine":1,"endColumn":38},{"ruleId":"191","severity":1,"message":"203","line":12,"column":24,"nodeType":"193","messageId":"194","endLine":12,"endColumn":35},{"ruleId":"191","severity":1,"message":"204","line":2,"column":16,"nodeType":"193","messageId":"194","endLine":2,"endColumn":27},{"ruleId":"191","severity":1,"message":"205","line":34,"column":11,"nodeType":"193","messageId":"194","endLine":34,"endColumn":27},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["208"],"@typescript-eslint/no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'TextField' is defined but never used.","'ModalBlock' is defined but never used.","'Tweet' is defined but never used.","'AddFormState' is defined but never used.","'createSelector' is defined but never used.","'ReactElement' is defined but never used.","'useState' is defined but never used.","'FetchTweets' is defined but never used.","'TweetsState' is defined but never used.","'handleClickTweet' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},"Update the dependencies array to be: [history]",{"range":"211","text":"212"},[350,352],"[history]"]