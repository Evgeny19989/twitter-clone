[{"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\index.tsx":"1","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\theme.ts":"2","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\store.ts":"3","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\App.tsx":"4","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\RootReducer.ts":"5","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\sagas.ts":"6","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\pages\\SignIn.tsx":"7","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\pages\\Home\\index.tsx":"8","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tweets\\reducer.ts":"9","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tweets\\saga.ts":"10","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tweets\\actionCreators.ts":"11","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tweets\\selectors.ts":"12","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\components\\AddTweetForm.tsx":"13","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\components\\SearchTextField.tsx":"14","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\pages\\Home\\theme.tsx":"15","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\components\\SideMenu.tsx":"16","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tweets\\contracts\\state.ts":"17","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\services\\api\\tweetsApi.ts":"18","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\components\\ModalBlock\\index.tsx":"19","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\components\\Tweet\\index.tsx":"20","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\pages\\Home\\components\\FullTweet.tsx":"21","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tags\\reducer.ts":"22","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tags\\actionCreators.ts":"23","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tags\\contracts\\state.ts":"24"},{"size":739,"mtime":1612276586728,"results":"25","hashOfConfig":"26"},{"size":2654,"mtime":1610977192906,"results":"27","hashOfConfig":"26"},{"size":803,"mtime":1612281712123,"results":"28","hashOfConfig":"26"},{"size":451,"mtime":1612191042972,"results":"29","hashOfConfig":"26"},{"size":241,"mtime":1612282404993,"results":"30","hashOfConfig":"26"},{"size":183,"mtime":1612276586736,"results":"31","hashOfConfig":"26"},{"size":8445,"mtime":1611936317230,"results":"32","hashOfConfig":"26"},{"size":5247,"mtime":1612279457422,"results":"33","hashOfConfig":"26"},{"size":902,"mtime":1612276586734,"results":"34","hashOfConfig":"26"},{"size":742,"mtime":1612276586734,"results":"35","hashOfConfig":"26"},{"size":1225,"mtime":1612276586732,"results":"36","hashOfConfig":"26"},{"size":678,"mtime":1612276586735,"results":"37","hashOfConfig":"26"},{"size":4099,"mtime":1612191042974,"results":"38","hashOfConfig":"26"},{"size":1016,"mtime":1612191042974,"results":"39","hashOfConfig":"26"},{"size":6990,"mtime":1612276586730,"results":"40","hashOfConfig":"26"},{"size":4788,"mtime":1612276586727,"results":"41","hashOfConfig":"26"},{"size":382,"mtime":1612276586733,"results":"42","hashOfConfig":"26"},{"size":264,"mtime":1612277204911,"results":"43","hashOfConfig":"26"},{"size":1518,"mtime":1612192112254,"results":"44","hashOfConfig":"26"},{"size":2450,"mtime":1612278771635,"results":"45","hashOfConfig":"26"},{"size":4188,"mtime":1612278963875,"results":"46","hashOfConfig":"26"},{"size":954,"mtime":1612282142948,"results":"47","hashOfConfig":"26"},{"size":1244,"mtime":1612282087738,"results":"48","hashOfConfig":"26"},{"size":293,"mtime":1612281712125,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"8xg2yn",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\index.tsx",[],["102","103"],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\theme.ts",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\store.ts",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\App.tsx",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\RootReducer.ts",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\sagas.ts",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\pages\\SignIn.tsx",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\pages\\Home\\index.tsx",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tweets\\reducer.ts",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tweets\\saga.ts",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tweets\\actionCreators.ts",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tweets\\selectors.ts",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\components\\AddTweetForm.tsx",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\components\\SearchTextField.tsx",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\pages\\Home\\theme.tsx",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\components\\SideMenu.tsx",["104","105"],"import React, {ReactElement, useState} from 'react'\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport {Hidden, Typography} from \"@material-ui/core\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport {Button} from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { useHomeStyles } from '../pages/Home/theme';\r\nimport {ModalBlock} from \"./ModalBlock\";\r\nimport {AddTweetForm} from \"./AddTweetForm\";\r\n\r\ninterface SideMenuProps {\r\n    classes: ReturnType<typeof useHomeStyles>;\r\n}\r\n\r\n\r\nexport const SideMenu: React.FC<SideMenuProps> = ({classes}: SideMenuProps): React.ReactElement => {\r\n\r\n    const [visibleAddTweetModal, setVisibleAddTweetModal] = React.useState<boolean>(false)\r\n\r\n    const onCloseAddTweetModal = () =>{\r\n        setVisibleAddTweetModal(false)\r\n    }\r\n\r\n    const onOpenAddTweetModal = () =>{\r\n        setVisibleAddTweetModal(true)\r\n    }\r\n\r\n    return (\r\n        <div style={{position:'sticky' , top:'0'}}>\r\n            <ul className={classes.sideMenuList}>\r\n                <li className={classes.sideMenuListItem}>\r\n                  \r\n                    <div>\r\n\r\n                        <TwitterIcon style={{marginRight: '10px'}} className={classes.logo} color='primary'/>\r\n\r\n                    </div>\r\n\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <div>\r\n\r\n                        <SearchIcon style={{marginRight: '10px'}} color='primary'/>\r\n                        <Hidden smDown>\r\n                            <Typography variant='h6'>Поиск</Typography>\r\n                        </Hidden>\r\n\r\n                    </div>\r\n\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <div>\r\n\r\n                        <NotificationsIcon style={{marginRight: '10px'}} color='primary'/>\r\n                        <Hidden smDown>\r\n                            <Typography variant='h6'>Уведомления</Typography>\r\n                        </Hidden>\r\n                    </div>\r\n\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <div>\r\n\r\n                        <EmailIcon style={{marginRight: '10px'}} color='primary'/>\r\n                        <Hidden smDown>\r\n                            <Typography variant='h6'>Сообщения</Typography>\r\n                        </Hidden>\r\n\r\n                    </div>\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <div>\r\n\r\n                        <BookmarkIcon style={{marginRight: '10px'}} color='primary'/>\r\n                        <Hidden smDown>\r\n                            <Typography variant='h6'>Закладки</Typography>\r\n                        </Hidden>\r\n\r\n                    </div>\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <div>\r\n                        <ListAltIcon style={{marginRight: '10px'}} color='primary'/>\r\n                        <Hidden smDown>\r\n                            <Typography variant='h6'>Список</Typography>\r\n                        </Hidden>\r\n\r\n                    </div>\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <div>\r\n\r\n                        <PersonIcon style={{marginRight: '10px'}} color='primary'/>\r\n                        <Hidden smDown>\r\n                            <Typography variant='h6'>Профиль</Typography>\r\n                        </Hidden>\r\n\r\n                    </div>\r\n                </li>\r\n                <li className={classes.sideMenuListItem}>\r\n                    <Button onClick={onOpenAddTweetModal} className={classes.SideMenuTweetButton} variant='contained' color='primary'\r\n                            fullWidth={true}>\r\n                        <Hidden smDown>\r\n                            Твитнуть\r\n                        </Hidden>\r\n                        <Hidden mdUp>\r\n\r\n                            <CreateIcon/>\r\n                        </Hidden>\r\n                    </Button>\r\n                    <ModalBlock visible={visibleAddTweetModal}  onClose={onCloseAddTweetModal}>\r\n                        <div style={{width:'450px'}}>\r\n                            <AddTweetForm maxRows={15} classes={classes}/>\r\n                        </div>\r\n\r\n                    </ModalBlock>\r\n                </li>\r\n\r\n            </ul>\r\n        </div>\r\n    )\r\n}","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tweets\\contracts\\state.ts",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\services\\api\\tweetsApi.ts",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\components\\ModalBlock\\index.tsx",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\components\\Tweet\\index.tsx",["106"],"import {Avatar, Grid, Paper, Typography,} from '@material-ui/core'\r\nimport React from 'react'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CommentIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport RepostIcon from '@material-ui/icons/Repeat';\r\nimport ReplyIcon from '@material-ui/icons/Reply';\r\nimport LikeIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport classNames from 'classnames'\r\nimport { useHomeStyles } from '../../pages/Home/theme';\r\n\r\n\r\ninterface TweetProps {\r\n    _id:string;\r\n    text:string;\r\n    classes : ReturnType<typeof useHomeStyles>;\r\n    user:{\r\n        fullname:string;\r\n        username:string;\r\n        avatarUrl:string;\r\n\r\n    };\r\n}\r\n\r\nexport const Tweet : React.FC<TweetProps>  = ({classes, text,user}:TweetProps):React.ReactElement => {\r\n    return <div>\r\n        <Paper className={classNames( classes.tweet ,  classes.tweetsHeader)} variant={'outlined'}>\r\n\r\n<div style={{display:'flex',\r\n    alignItems:'center',\r\n    marginBottom:'15px'\r\n\r\n}}>\r\n    <Avatar style={{ marginRight:'15px'}} alt={`Аватарка пользователя ${user.fullname}`} src={user.avatarUrl} />\r\n    <Typography>\r\n        <b>{user.fullname}</b>\r\n        <span className={classes.tweetsUserName}>@{user.username}</span>&nbsp;\r\n        <span className={classes.tweetsUserName}>. </span>&nbsp;\r\n        <span className={classes.tweetsUserName}>1 ч </span>&nbsp;\r\n    </Typography>\r\n</div>\r\n\r\n                    <Typography variant={'body1'} gutterBottom>\r\n                        {text}\r\n                    </Typography>\r\n                    <div className={classes.tweetFooter}>\r\n                        <IconButton color='primary'>\r\n                            <CommentIcon style={{fontSize:'20px' }}/>\r\n                            <span   style={{fontSize:'16px', marginLeft:'5px' }} >1</span>\r\n                        </IconButton>\r\n\r\n                        <IconButton color='primary'>\r\n                            <RepostIcon style={{fontSize:'20px' }}/>\r\n\r\n                        </IconButton>\r\n                        <IconButton color='primary'>\r\n                            <LikeIcon style={{fontSize:'20px' }}/>\r\n\r\n                        </IconButton>\r\n                        <IconButton color='primary'>\r\n                            <ReplyIcon style={{fontSize:'20px' }}/>\r\n                        </IconButton>\r\n                    </div>\r\n\r\n\r\n        </Paper>\r\n    </div>\r\n}","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\pages\\Home\\components\\FullTweet.tsx",["107","108","109","110","111"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classNames from 'classnames';\r\nimport CommentIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport RepostIcon from '@material-ui/icons/RepeatOutlined';\r\nimport LikeIcon from '@material-ui/icons/FavoriteBorderOutlined';\r\nimport ShareIcon from '@material-ui/icons/ReplyOutlined';\r\nimport { Divider, IconButton } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Tweet } from '../../../components/Tweet';\r\nimport { useHomeStyles } from '../theme';\r\n\r\n\r\n\r\nexport const FullTweet: React.FC = (): React.ReactElement | null => {\r\n    const classes = useHomeStyles();\r\n    const dispatch = useDispatch();\r\n    const params: { id?: string } = useParams();\r\n    const id = params.id;\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <>\r\n                <Paper className={classes.fullTweet}>\r\n                    <div >\r\n                        <Avatar\r\n                            className={classes.tweetAvatar}\r\n                            alt={`Аватарка пользователя`}\r\n                        />\r\n                        <Typography>\r\n                                <b>Hello</b>&nbsp;\r\n                            <div>\r\n                                <span className={classes.tweetUserName}>@Hello</span>&nbsp;\r\n                            </div>\r\n                        </Typography>\r\n                    </div>\r\n                    <Typography className={classes.fullTweetText} gutterBottom>\r\n                        Text\r\n                        <div className=\"tweet-images\">\r\n\r\n                        </div>\r\n                    </Typography>\r\n                    <Typography>\r\n            <span className={classes.tweetUserName}>\r\n\r\n            </span>\r\n                        <span className={classes.tweetUserName}>\r\n\r\n            </span>\r\n                    </Typography>\r\n                    <div className={classNames(classes.tweetFooter, classes.fullTweetFooter)}>\r\n                        <IconButton>\r\n                            <CommentIcon style={{ fontSize: 25 }} />\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <RepostIcon style={{ fontSize: 25 }} />\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <LikeIcon style={{ fontSize: 25 }} />\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <ShareIcon style={{ fontSize: 25 }} />\r\n                        </IconButton>\r\n                    </div>\r\n                </Paper>\r\n                <Divider />\r\n                <Tweet\r\n                    _id=\"1\"\r\n                    text=\"Any more to move? You might need to adjust your stretching routines!\"\r\n                    user={{\r\n                        fullname: 'Arlene Andrews',\r\n                        username: 'ArleneAndrews_1',\r\n                        avatarUrl:'eee'\r\n                    }}\r\n                    classes={classes}\r\n                />\r\n                <Tweet\r\n                    _id=\"1\"\r\n                    text=\"Any more to move? You might need to adjust your stretching routines!\"\r\n\r\n                    user={{\r\n                        fullname: 'Arlene Andrews',\r\n                        username: 'ArleneAndrews_1',\r\n                        avatarUrl:'eee'\r\n                    }}\r\n                    classes={classes}\r\n                />\r\n                <Tweet\r\n                    _id=\"1\"\r\n                    text=\"Any more to move? You might need to adjust your stretching routines!\"\r\n                    user={{\r\n                        fullname: 'Arlene Andrews',\r\n                        username: 'ArleneAndrews_1',\r\n                        avatarUrl:'eee'\r\n                    }}\r\n                    classes={classes}\r\n                />\r\n            </>\r\n        );\r\n\r\n\r\n\r\n};\r\n","C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tags\\reducer.ts",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tags\\actionCreators.ts",[],"C:\\Users\\centr\\PROJECT\\twitter-clone\\frontend\\src\\store\\ducks\\tags\\contracts\\state.ts",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":16,"nodeType":"118","messageId":"119","endLine":1,"endColumn":28},{"ruleId":"116","severity":1,"message":"120","line":1,"column":30,"nodeType":"118","messageId":"119","endLine":1,"endColumn":38},{"ruleId":"116","severity":1,"message":"121","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":21},{"ruleId":"116","severity":1,"message":"122","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":24},{"ruleId":"116","severity":1,"message":"123","line":12,"column":23,"nodeType":"118","messageId":"119","endLine":12,"endColumn":34},{"ruleId":"116","severity":1,"message":"124","line":13,"column":10,"nodeType":"118","messageId":"119","endLine":13,"endColumn":14},{"ruleId":"116","severity":1,"message":"125","line":21,"column":11,"nodeType":"118","messageId":"119","endLine":21,"endColumn":19},{"ruleId":"116","severity":1,"message":"126","line":23,"column":11,"nodeType":"118","messageId":"119","endLine":23,"endColumn":13},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"@typescript-eslint/no-unused-vars","'ReactElement' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Grid' is defined but never used.","'CircularProgress' is defined but never used.","'useSelector' is defined but never used.","'Link' is defined but never used.","'dispatch' is assigned a value but never used.","'id' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]